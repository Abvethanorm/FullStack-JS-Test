version: 2.1

jobs:
  build:
    docker:
      - image: circleci/buildpack-deps:20.04
    steps:
      - add_ssh_keys:
          fingerprints:
            - "circlecikey"
      - checkout
      - run:
          name: Install Git and SSH
          command: |
            sudo apt-get update
            sudo apt-get -y install git ssh
      - run:
          name: Set permissions for CircleCI user
          command: |
            sudo chown -R circleci:circleci /home/circleci
      - run:
          name: Install Docker
          command: |
            sudo apt-get update
            sudo apt-get -y install apt-transport-https ca-certificates curl gnupg lsb-release
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            echo \
              "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
              $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get -y install docker-ce docker-ce-cli containerd.io
      - setup_remote_docker
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKER_HUB_PASSWORD" | docker login --username "normthelinuxguy" --password-stdin
      - run:
          name: Build and push Docker images
          command: |
            docker build -t server ./server
            docker tag server:latest docker.io/normthelinuxguy/my-backend-image:latest
            docker push docker.io/normthelinuxguy/my-backend-image:latest
            docker build -t my-nginx-image ./nginx
            docker tag my-nginx-image:latest docker.io/normthelinuxguy/my-nginx-image:latest
            docker push docker.io/normthelinuxguy/my-nginx-image:latest
            docker build -t client ./client 
            docker tag client:latest docker.io/normthelinuxguy/my-frontend-image:latest
            docker push docker.io/normthelinuxguy/my-frontend-image:latest

  deploy:
    docker:
      - image: bitnami/kubectl:latest
    steps:
      - checkout
      - run:
          name: Install kubectl
          command: sudo install_packages kubectl
      - run:
          name: Deploy backend and frontend images to Kubernetes
          command: |
            kubectl set image deployment/server-deployment server=docker.io/normthelinuxguy/my-backend-image:latest
            kubectl set image deployment/nginx-deployment nginx=docker.io/normthelinuxguy/my-nginx-image:latest
            kubectl set image deployment/client-deployment client=docker.io/normthelinuxguy/my-frontend-image:latest

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
         
      - deploy